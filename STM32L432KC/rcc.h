
#ifndef STM32L432KC_RCC_H
#define STM32L432KC_RCC_H

#include <stdint.h>

#define ALL1 ( (uint32_t) 0xFFFFFFFF )

typedef struct {
	uint32_t volatile CR;
	uint32_t volatile ICSCR;
	uint32_t volatile CFGR;
	uint32_t volatile PLLCFGR;
	uint32_t volatile PLLSAI1CFGR;
	uint32_t volatile RESERVED0;
	uint32_t volatile CIER;
	uint32_t volatile CIFR;
	uint32_t volatile CICR;
	uint32_t volatile RESERVED1;
	uint32_t volatile AHB1RSTR;
	uint32_t volatile AHB2RSTR;
	uint32_t volatile AHB3RSTR;
	uint32_t volatile RESERVED2;
	uint32_t volatile APB1STR1;
	uint32_t volatile APB1STR2;
	uint32_t volatile APB2RSTR;
	uint32_t volatile RESERVED3;
	uint32_t volatile AHB1ENR;
	uint32_t volatile AHB2ENR;
	uint32_t volatile AHB3ENR;
	uint32_t volatile RESERVED4;
	uint32_t volatile APB1ENR1;
	uint32_t volatile APB1NER2;
	uint32_t volatile APB2ENR;
	uint32_t volatile RESERVED5;
	uint32_t volatile AHB1SMENR;
	uint32_t volatile AHB2SMENR;
	uint32_t volatile AHB3SMENR;
	uint32_t volatile RESERVED6;
	uint32_t volatile APB1SMENR1;
	uint32_t volatile APB1SMENR2;
	uint32_t volatile APB2SMENR;
	uint32_t volatile RESERVED7;
	uint32_t volatile CCIPR;
	uint32_t volatile RESERVED8;
	uint32_t volatile BDCR;
	uint32_t volatile CSR;
	uint32_t volatile CRRCR;
	uint32_t volatile CCIPR2;
} RCC_REG_BLOCKS;

/* RCC registers as structs */

#define RCC ( (RCC_REG_BLOCKS volatile *) 0x40021000 )

/* RCC AHB1RSTR register macros */

#define RCC_AHB1RSTR_DMA1RST(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_AHB1RSTR_DMA1RST_MASK RCC_AHB1RSTR_DMA1RST(ALL1)
#define RCC_AHB1RSTR_DMA2RST(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_AHB1RSTR_DMA2RST_MASK RCC_AHB1RSTR_DMA2RST(ALL1)
#define RCC_AHB1RSTR_FLASHRST(v) ( ( (v) & 0x1 ) << 6 )
#define RCC_AHB1RSTR_FLASHRST_MASK RCC_AHB1RSTR_FLASHRST(ALL1)
#define RCC_AHB1RSTR_CRCRST(v) ( ( (v) & 0x1 ) << 12 )
#define RCC_AHB1RSTR_CRCRST_MASK RCC_AHB1RSTR_CRCRST(ALL1)
#define RCC_AHB1RSTR_TSCRST(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_AHB1RSTR_TSCRST_MASK RCC_AHB1RSTR_TSCRST(ALL1)

/* RCC AHB2RSTR register macros */

#define RCC_AHB2RSTR_GPIOARST(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_AHB2RSTR_GPIOARST_MASK RCC_AHB2RSTR_GPIOARST(ALL1)
#define RCC_AHB2RSTR_GPIOBRST(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_AHB2RSTR_GPIOBRST_MASK RCC_AHB2RSTR_GPIOBRST(ALL1)
#define RCC_AHB2RSTR_GPIOCRST(v) ( ( (v) & 0x1 ) << 2 )
#define RCC_AHB2RSTR_GPIOCRST_MASK RCC_AHB2RSTR_GPIOCRST(ALL1)
#define RCC_AHB2RSTR_GPIOHRST(v) ( ( (v) & 0x1 ) << 7 )
#define RCC_AHB2RSTR_GPIOHRST_MASK RCC_AHB2RSTR_GPIOHRST(ALL1)
#define RCC_AHB2RSTR_ADCRST(v) ( ( (v) & 0x1 ) << 13 )
#define RCC_AHB2RSTR_ADCRST_MASK RCC_AHB2RSTR_ADCRST(ALL1)
#define RCC_AHB2RSTR_AESRST(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_AHB2RSTR_AESRST_MASK RCC_AHB2RSTR_AESRST(ALL1)
#define RCC_AHB2RSTR_RNGRST(v) ( ( (v) & 0x1 ) << 18 )
#define RCC_AHB2RSTR_RNGRST_MASK RCC_AHB2RSTR_RNGRST(ALL1)

/* RCC AHB3RSTR register macros */

#define RCC_AHB3RSTR_QSPIRST(v) ( ( (v) & 0x1 ) << 8 )
#define RCC_AHB3RSTR_QSPIRST_MASK RCC_AHB3RSTR_QSPIRST(ALL1)

/* RCC APB1RSTR register macros */

#define RCC_APB1RSTR_TIM2RST(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_APB1RSTR_TIM2RST_MASK RCC_APB1RSTR_TIM2RST(ALL1)
#define RCC_APB1RSTR_TIM3RST(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_APB1RSTR_TIM3RST_MASK RCC_APB1RSTR_TIM3RST(ALL1)
#define RCC_APB1RSTR_TIM6RST(v) ( ( (v) & 0x1 ) << 4 )
#define RCC_APB1RSTR_TIM6RST_MASK RCC_APB1RSTR_TIM6RST(ALL1)
#define RCC_APB1RSTR_TIM7RST(v) ( ( (v) & 0x1 ) << 5 )
#define RCC_APB1RSTR_TIM7RST_MASK RCC_APB1RSTR_TIM7RST(ALL1)
#define RCC_APB1RSTR_SPI2RST(v) ( ( (v) & 0x1 ) << 14 )
#define RCC_APB1RSTR_SPI2RST_MASK RCC_APB1RSTR_SPI2RST(ALL1)
#define RCC_APB1RSTR_SPI3RST(v) ( ( (v) & 0x1 ) << 15 )
#define RCC_APB1RSTR_SPI3RST_MASK RCC_APB1RSTR_SPI3RST(ALL1)
#define RCC_APB1RSTR_USART2RST(v) ( ( (v) & 0x1 ) << 17 )
#define RCC_APB1RSTR_USART2RST_MASK RCC_APB1RSTR_USART2RST(ALL1)
#define RCC_APB1RSTR_I2C1RST(v) ( ( (v) & 0x1 ) << 21 )
#define RCC_APB1RSTR_I2C1RST_MASK RCC_APB1RSTR_I2C1RST(ALL1)
#define RCC_APB1RSTR_I2C3RST(v) ( ( (v) & 0x1 ) << 23 )
#define RCC_APB1RSTR_I2C3RST_MASK RCC_APB1RSTR_I2C3RST(ALL1)
#define RCC_APB1RSTR_CRSRST(v) ( ( (v) & 0x1 ) << 24 )
#define RCC_APB1RSTR_CRSRST_MASK RCC_APB1RSTR_CRSRST(ALL1)
#define RCC_APB1RSTR_CAN1RST(v) ( ( (v) & 0x1 ) << 25 )
#define RCC_APB1RSTR_CAN1RST_MASK RCC_APB1RSTR_CAN1RST(ALL1)
#define RCC_APB1RSTR_USBFSRST(v) ( ( (v) & 0x1 ) << 26 )
#define RCC_APB1RSTR_USBFSRST_MASK RCC_APB1RSTR_USBFSRST(ALL1)
#define RCC_APB1RSTR_PWRRST(v) ( ( (v) & 0x1 ) << 28 )
#define RCC_APB1RSTR_PWRRST_MASK RCC_APB1RSTR_PWRRST(ALL1)
#define RCC_APB1RSTR_DAC1RST(v) ( ( (v) & 0x1 ) << 29 )
#define RCC_APB1RSTR_DAC1RST_MASK RCC_APB1RSTR_DAC1RST(ALL1)
#define RCC_APB1RSTR_OPAMPRST(v) ( ( (v) & 0x1 ) << 30 )
#define RCC_APB1RSTR_OPAMPRST_MASK RCC_APB1RSTR_OPAMPRST(ALL1)
#define RCC_APB1RSTR_LPTIM1RST(v) ( ( (v) & 0x1 ) << 31 )
#define RCC_APB1RSTR_LPTIM1RST_MASK RCC_APB1RSTR_LPTIM1RST(ALL1)

/* RCC APB2RSTR register macros */

#define RCC_APB2RSTR_SYSCFGRST(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_APB2RSTR_SYSCFGRST_MASK RCC_APB2RSTR_SYSCFGRST(ALL1)
#define RCC_APB2RSTR_TIM1RST(v) ( ( (v) & 0x1 ) << 11 )
#define RCC_APB2RSTR_TIM1RST_MASK RCC_APB2RSTR_TIM1RST(ALL1)
#define RCC_APB2RSTR_SPI1RST(v) ( ( (v) & 0x1 ) << 12 )
#define RCC_APB2RSTR_SPI1RST_MASK RCC_APB2RSTR_SPI1RST(ALL1)
#define RCC_APB2RSTR_USART1RST(v) ( ( (v) & 0x1 ) << 14 )
#define RCC_APB2RSTR_USART1RST_MASK RCC_APB2RSTR_USART1RST(ALL1)
#define RCC_APB2RSTR_TIM15RST(v) ( ( (v) & 0x1 ) << 15 )
#define RCC_APB2RSTR_TIM15RST_MASK RCC_APB2RSTR_TIM15RST(ALL1)
#define RCC_APB2RSTR_TIM16RST(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_APB2RSTR_TIM16RST_MASK RCC_APB2RSTR_TIM16RST(ALL1)
#define RCC_APB2RSTR_SAI1RST(v) ( ( (v) & 0x1 ) << 21 )
#define RCC_APB2RSTR_SAI1RST_MASK RCC_APB2RSTR_SAI1RST(ALL1)
#define RCC_APB2RSTR_DFSDM1RST(v) ( ( (v) & 0x1 ) << 24 )
#define RCC_APB2RSTR_DFSDM1RST_MASK RCC_APB2RSTR_DFSDM1RST(ALL1)

/* RCC AHB1ENR register macros */

#define RCC_AHB1ENR_DMA1EN(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_AHB1ENR_DMA1EN_MASK RCC_AHB1ENR_DMA1EN(ALL1)
#define RCC_AHB1ENR_DMA2EN(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_AHB1ENR_DMA2EN_MASK RCC_AHB1ENR_DMA2EN(ALL1)
#define RCC_AHB1ENR_FLASHEN(v) ( ( (v) & 0x1 ) << 6 )
#define RCC_AHB1ENR_FLASHEN_MASK RCC_AHB1ENR_FLASHEN(ALL1)
#define RCC_AHB1ENR_CRCEN(v) ( ( (v) & 0x1 ) << 12 )
#define RCC_AHB1ENR_CRCEN_MASK RCC_AHB1ENR_CRCEN(ALL1)
#define RCC_AHB1ENR_TSCEN(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_AHB1ENR_TSCEN_MASK RCC_AHB1ENR_TSCEN(ALL1)

/* RCC AHB2ENR register macros */

#define RCC_AHB2ENR_GPIOAEN(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_AHB2ENR_GPIOAEN_MASK RCC_AHB2ENR_GPIOAEN(ALL1)
#define RCC_AHB2ENR_GPIOBEN(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_AHB2ENR_GPIOBEN_MASK RCC_AHB2ENR_GPIOBEN(ALL1)
#define RCC_AHB2ENR_GPIOCEN(v) ( ( (v) & 0x1 ) << 2 )
#define RCC_AHB2ENR_GPIOCEN_MASK RCC_AHB2ENR_GPIOCEN(ALL1)
#define RCC_AHB2ENR_GPIOHEN(v) ( ( (v) & 0x1 ) << 7 )
#define RCC_AHB2ENR_GPIOHEN_MASK RCC_AHB2ENR_GPIOHEN(ALL1)
#define RCC_AHB2ENR_ADCEN(v) ( ( (v) & 0x1 ) << 13 )
#define RCC_AHB2ENR_ADCEN_MASK RCC_AHB2ENR_ADCEN(ALL1)
#define RCC_AHB2ENR_AESEN(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_AHB2ENR_AESEN_MASK RCC_AHB2ENR_AESEN(ALL1)
#define RCC_AHB2ENR_RNGEN(v) ( ( (v) & 0x1 ) << 18 )
#define RCC_AHB2ENR_RNGEN_MASK RCC_AHB2ENR_RNGEN(ALL1)

/* RCC AHB3ENR register macros */

#define RCC_AHB3ENR_QSPIEN(v) ( ( (v) & 0x1 ) << 8 )
#define RCC_AHB3ENR_QSPIEN_MASK RCC_AHB3ENR_QSPIEN(ALL1)

/* RCC APB1ENR register macros */

#define RCC_APB1ENR_TIM2EN(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_APB1ENR_TIM2EN_MASK RCC_APB1ENR_TIM2EN(ALL1)
#define RCC_APB1ENR_TIM3EN(v) ( ( (v) & 0x1 ) << 1 )
#define RCC_APB1ENR_TIM3EN_MASK RCC_APB1ENR_TIM3EN(ALL1)
#define RCC_APB1ENR_TIM6EN(v) ( ( (v) & 0x1 ) << 4 )
#define RCC_APB1ENR_TIM6EN_MASK RCC_APB1ENR_TIM6EN(ALL1)
#define RCC_APB1ENR_TIM7EN(v) ( ( (v) & 0x1 ) << 5 )
#define RCC_APB1ENR_TIM7EN_MASK RCC_APB1ENR_TIM7EN(ALL1)
#define RCC_APB1ENR_RTCAPBEN(v) ( ( (v) & 0x1 ) << 10 )
#define RCC_APB1ENR_RTCAPBEN_MASK RCC_APB1ENR_RTCAPBEN(ALL1)
#define RCC_APB1ENR_WWDGEN(v) ( ( (v) & 0x1 ) << 11 )
#define RCC_APB1ENR_WWDGEN_MASK RCC_APB1ENR_WWDGEN(ALL1)
#define RCC_APB1ENR_SPI2EN(v) ( ( (v) & 0x1 ) << 14 )
#define RCC_APB1ENR_SPI2EN_MASK RCC_APB1ENR_SPI2EN(ALL1)
#define RCC_APB1ENR_SPI3EN(v) ( ( (v) & 0x1 ) << 15 )
#define RCC_APB1ENR_SPI3EN_MASK RCC_APB1ENR_SPI3EN(ALL1)
#define RCC_APB1ENR_USART2EN(v) ( ( (v) & 0x1 ) << 17 )
#define RCC_APB1ENR_USART2EN_MASK RCC_APB1ENR_USART2EN(ALL1)
#define RCC_APB1ENR_I2C1EN(v) ( ( (v) & 0x1 ) << 21 )
#define RCC_APB1ENR_I2C1EN_MASK RCC_APB1ENR_I2C1EN(ALL1)
#define RCC_APB1ENR_I2C3EN(v) ( ( (v) & 0x1 ) << 23 )
#define RCC_APB1ENR_I2C3EN_MASK RCC_APB1ENR_I2C3EN(ALL1)
#define RCC_APB1ENR_CRSEN(v) ( ( (v) & 0x1 ) << 24 )
#define RCC_APB1ENR_CRSEN_MASK RCC_APB1ENR_CRSEN(ALL1)
#define RCC_APB1ENR_CAN1EN(v) ( ( (v) & 0x1 ) << 25 )
#define RCC_APB1ENR_CAN1EN_MASK RCC_APB1ENR_CAN1EN(ALL1)
#define RCC_APB1ENR_USBFSEN(v) ( ( (v) & 0x1 ) << 26 )
#define RCC_APB1ENR_USBFSEN_MASK RCC_APB1ENR_USBFSEN(ALL1)
#define RCC_APB1ENR_PWREN(v) ( ( (v) & 0x1 ) << 28 )
#define RCC_APB1ENR_PWREN_MASK RCC_APB1ENR_PWREN(ALL1)
#define RCC_APB1ENR_DAC1EN(v) ( ( (v) & 0x1 ) << 29 )
#define RCC_APB1ENR_DAC1EN_MASK RCC_APB1ENR_DAC1EN(ALL1)
#define RCC_APB1ENR_OPAMPEN(v) ( ( (v) & 0x1 ) << 30 )
#define RCC_APB1ENR_OPAMPEN_MASK RCC_APB1ENR_OPAMPEN(ALL1)
#define RCC_APB1ENR_LPTIM1EN(v) ( ( (v) & 0x1 ) << 31 )
#define RCC_APB1ENR_LPTIM1EN_MASK RCC_APB1ENR_LPTIM1EN(ALL1)

/* RCC APB2ENR register macros */

#define RCC_APB2ENR_SYSCFGEN(v) ( ( (v) & 0x1 ) << 0 )
#define RCC_APB2ENR_SYSCFGEN_MASK RCC_APB2ENR_SYSCFGEN(ALL1)
#define RCC_APB2ENR_FWEN(v) ( ( (v) & 0x1 ) << 7 )
#define RCC_APB2ENR_FWEN_MASK RCC_APB2ENR_FWEN(ALL1)
#define RCC_APB2ENR_TIMEN(v) ( ( (v) & 0x1 ) << 11 )
#define RCC_APB2ENR_TIMEN_MASK RCC_APB2ENR_TIMEN(ALL1)
#define RCC_APB2ENR_SPI1EN(v) ( ( (v) & 0x1 ) << 12 )
#define RCC_APB2ENR_SPI1EN_MASK RCC_APB2ENR_SPI1EN(ALL1)
#define RCC_APB2ENR_USART1EN(v) ( ( (v) & 0x1 ) << 14 )
#define RCC_APB2ENR_USART1EN_MASK RCC_APB2ENR_USART1EN(ALL1)
#define RCC_APB2ENR_TIM15EN(v) ( ( (v) & 0x1 ) << 16 )
#define RCC_APB2ENR_TIM15EN_MASK RCC_APB2ENR_TIM15EN(ALL1)
#define RCC_APB2ENR_TIM16EN(v) ( ( (v) & 0x1 ) << 17 )
#define RCC_APB2ENR_TIM16EN_MASK RCC_APB2ENR_TIM16EN(ALL1)
#define RCC_APB2ENR_SAI2EN(v) ( ( (v) & 0x1 ) << 21 )
#define RCC_APB2ENR_SAI2EN_MASK RCC_APB2ENR_SAI2EN(ALL1)

#endif

